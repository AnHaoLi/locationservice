box: microsoft/dotnet:1.0.0-preview2-sdk
services:
   - id: postgres
     env:
       POSTGRES_PASSWORD: inteword
       POSTGRES_USER: integrator   
       POSTGRES_DB: locationservice
no-response-timeout: 10
build:
  steps: 
# compile  
    - script:
        name: restore
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          dotnet restore
    - script:
        name: build
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          dotnet build  

# unit tests          
    - script:
        name: test-restore
        cwd: test/StatlerWaldorfCorp.LocationService.Tests
        code: |
           dotnet restore
    - script:
        name: test-build
        cwd: test/StatlerWaldorfCorp.LocationService.Tests
        code: |
          dotnet build
    - script:
        name: test-run
        cwd: test/StatlerWaldorfCorp.LocationService.Tests
        code: |
          dotnet test

# interation tests
    - script:
        name: integration-migrate
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
           export INTEGRATION_POSTGRES_URL=postgres://integrator:inteword@$POSTGRES_PORT_5432_TCP_ADDR:$POSTGRES_PORT_5432_TCP_PORT/locationservice
           vcap__services__postgres__0__name=postgres vcap__services__postgres__0__credentials__uri=$INTEGRATION_POSTGRES_URL dotnet ef database update                              
    - script:
        name: integration-restore
        cwd: test/StatlerWaldorfCorp.LocationService.Integration
        code: |
           dotnet restore
    - script:
        name: integration-build
        cwd: test/StatlerWaldorfCorp.LocationService.Integration
        code: |
          dotnet build
    - script:
        name: integration-test
        cwd: test/StatlerWaldorfCorp.LocationService.Integration
        code: |
          export INTEGRATION_POSTGRES_URL=postgres://integrator:inteword@$POSTGRES_PORT_5432_TCP_ADDR:$POSTGRES_PORT_5432_TCP_PORT/locationservice
          vcap__services__postgres__0__name=postgres vcap__services__postgres__0__credentials__uri=$INTEGRATION_POSTGRES_URL dotnet test

# packaging
    - script:
        name: publish
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          dotnet publish -o publish  
    - script:
        name: copy binary
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          cp -r . $WERCKER_OUTPUT_DIR/app 
    - script:
        name: copy entrypoint
        code: |
          cp docker_entrypoint.sh $WERCKER_OUTPUT_DIR/app
          ls $WERCKER_OUTPUT_DIR/app
    - script:
        name: copy config
        cwd: src/StatlerWaldorfCorp.LocationService
        code: |
          cp appsettings*json $WERCKER_OUTPUT_DIR/app/publish
          mkdir -p $WERCKER_OUTPUT_DIR/app/publish/app/tmp
deploy:
  steps:
    - internal/docker-push:
        cwd: $WERCKER_OUTPUT_DIR/app
        username: $USERNAME
        password: $PASSWORD
        repository: dotnetcoreservices/locationservice
        registry: https://registry.hub.docker.com
        entrypoint: "/pipeline/source/app/docker_entrypoint.sh"
migrate:
  steps:
    - script:
        name: restore
        cwd: app
        code: |
          dotnet restore
    - script:
        name: build
        cwd: app
        code: |
          dotnet build
    - script:
        name: migrate
        cwd: app
        code: |
           vcap__services__postgres__0__name=postgres vcap__services__postgres__0__credentials__uri=$POSTGRES_URL dotnet ef database update
cloud-deploy:
  steps:
    - chrisumbel/cf-deploy:
        api: $API
        user: $USER
        password: $PASSWORD
        org: $ORG
        space: $SPACE
        appname: locationservice
        docker_image: dotnetcoreservices/locationservice
        skip_ssl_validation: true